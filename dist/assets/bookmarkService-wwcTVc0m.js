class o{baseUrl;adminToken=null;constructor(){this.baseUrl="https://www.jisoolove.top"}setAdminToken(r){this.adminToken=r,localStorage.setItem("admin_token",r)}getAdminToken(){return this.adminToken||(this.adminToken=localStorage.getItem("admin_token")),this.adminToken}clearAdminToken(){this.adminToken=null,localStorage.removeItem("admin_token")}getHeaders(r=!1){const e={"Content-Type":"application/json"};return r&&this.getAdminToken()&&(e.Authorization=`Bearer ${this.getAdminToken()}`),e}async handleResponse(r){try{return await r.json()}catch{return{success:!1,error:"Failed to parse response"}}}async getAllBookmarks(){try{const r=await fetch(`${this.baseUrl}/api/bookmarks`,{method:"GET",headers:this.getHeaders()});return await this.handleResponse(r)}catch(r){return console.error("Failed to fetch bookmarks:",r),{success:!1,error:"Network error"}}}async getBookmark(r){try{const e=await fetch(`${this.baseUrl}/api/bookmarks/${r}`,{method:"GET",headers:this.getHeaders()});return await this.handleResponse(e)}catch(e){return console.error("Failed to fetch bookmark:",e),{success:!1,error:"Network error"}}}async addBookmark(r){try{const e=await fetch(`${this.baseUrl}/api/bookmarks`,{method:"POST",headers:this.getHeaders(!0),body:JSON.stringify(r)});return await this.handleResponse(e)}catch(e){return console.error("Failed to add bookmark:",e),{success:!1,error:"Network error"}}}async updateBookmark(r,e){try{const s=await fetch(`${this.baseUrl}/api/bookmarks/${r}`,{method:"PUT",headers:this.getHeaders(!0),body:JSON.stringify(e)});return await this.handleResponse(s)}catch(s){return console.error("Failed to update bookmark:",s),{success:!1,error:"Network error"}}}async deleteBookmark(r){try{const e=await fetch(`${this.baseUrl}/api/bookmarks/${r}`,{method:"DELETE",headers:this.getHeaders(!0)});return await this.handleResponse(e)}catch(e){return console.error("Failed to delete bookmark:",e),{success:!1,error:"Network error"}}}async verifyAdminPassword(r){try{const e=r,t=await(await fetch(`${this.baseUrl}/api/bookmarks`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({name:"test",description:"test",url:"https://test.com",icon:"ðŸ”—",category:"æµ‹è¯•",color:"#00d4ff"})})).json();return t.success&&t.data?(await fetch(`${this.baseUrl}/api/bookmarks/${t.data.id}`,{method:"DELETE",headers:{Authorization:`Bearer ${e}`}}),!0):!1}catch(e){return console.error("Failed to verify admin password:",e),!1}}}class n{baseUrl;constructor(){this.baseUrl="https://www.jisoolove.top"}getHeaders(){return{"Content-Type":"application/json"}}async handleResponse(r){try{return await r.json()}catch{return{success:!1,error:"Failed to parse response"}}}async getAllMessages(){try{const r=await fetch(`${this.baseUrl}/api/messages`,{method:"GET",headers:this.getHeaders()});return await this.handleResponse(r)}catch(r){return console.error("Failed to fetch messages:",r),{success:!1,error:"Network error"}}}async addMessage(r){try{const e=await fetch(`${this.baseUrl}/api/messages`,{method:"POST",headers:this.getHeaders(),body:JSON.stringify(r)});return await this.handleResponse(e)}catch(e){return console.error("Failed to add message:",e),{success:!1,error:"Network error"}}}}const i=new o,c=new n;export{i as b,c as m};
